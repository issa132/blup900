# -*- coding: utf-8 -*-
"""
Created on Mon Dec  4 19:08:20 2023

@author: owner
"""

import numpy as np
try:
    import itertools.izip as zip
except ImportError:
    import itertools
from Bio import Phylo
from Bio.Phylo.TreeConstruction import DistanceCalculator
from Bio.Phylo.TreeConstruction import DistanceTreeConstructor
from Bio import AlignIO

    
pop_size = 25  #100
seq_length = 20 #15
alphabet = ['A', 'T', 'G', 'C']
base_genotype = "ATGCAAAAATGCAATAATGC"
#base_genotype = ""

fitness = 200

#a_list = ['one', 'two', 3, 4]
#a_dict = { one: 1, two: 2 }



pop = {}
pop.update({base_genotype:1})
print(pop)

mutation_rate = 0.4 # 0.005 per gen per individual per site
env_length = 4

# used to calculate the number of events that will occur in a given time interval.
#The number of mutations in a strand of DNA per unit length (since mutations are rare) are Poisson distributed.
def get_mutation_count(): #nbre de mutation par generation
    lamda = mutation_rate * pop_size * seq_length
    return np.random.poisson(lamda)
print('mutation count')
print(get_mutation_count())

print(pop.keys())

def get_random_genotype(): # on prend un genotype au hasard dans la population
    genotypes = list(pop.keys()) 
    frequencies = [x/float(pop_size) for x in pop.values()]
    total = sum(frequencies)
    frequencies = [x / total for x in frequencies]
    return np.random.choice(genotypes, p=frequencies)
    #return np.random.choice(genotypes)


def get_mutant(base_genotype): #ici on mute le genotype
    site = np.random.randint(seq_length)
    possible_mutations = list(alphabet)
    possible_mutations.remove(base_genotype[site])
    mutation = np.random.choice(possible_mutations)
    new_base_genotype = base_genotype[:site] + mutation + base_genotype[site+1:]
    return new_base_genotype

def get_random_env(): # on prend un genotype au hasard dans la population
    env = np.random.randint(env_length)+1
    return np.random.choice(env)
    
    
    

print("genotype de base")
print(base_genotype)
print("genotype de base mute")
print(get_mutant(base_genotype))

'''
def mutation_event():
    #cette ligne je vais le cacher car on ne prend pas un genotype random dans la population
    #on veut voir les differentes mutations de notre genotype de base. 
    haplotype = get_random_genotype() 
    if pop[haplotype] > 1:
        pop[haplotype] -= 1
        new_haplotype = get_mutant(haplotype)
        if new_haplotype in pop:
            pop[new_haplotype] += 1
        else:
            pop[new_haplotype] = 1
            
def get_fitness(haplotype):
    old_fitness = fitness[haplotype]
    if (np.random.random() < fitness_chance):
        return old_fitness * fitness_effect
    else:
        return old_fitness
    
    
'''


    
    
def mutation_event():
    #cette ligne je vais le cacher car on ne prend pas un genotype random dans la population
    #on veut voir les differentes mutations de notre genotype de base. 
    #genotype = base_genotype 
    genotype = get_random_genotype()
    
    if pop[genotype] >= 1:
        #pop[genotype] -= 1
        new_genotype = get_mutant(genotype) 
        if new_genotype in pop:   # on regarde si le genotype est dans la poupulation 
            pop[new_genotype] += 1 #si oui on incremente son coefficient de 1
        else:
            pop.update({new_genotype:1}) #sinon on l ajoute dans la population
            #pop[new_genotype] = 1

         
mutation_event()

def env_event(keys):
    #cette ligne je vais le cacher car on ne prend pas un genotype random dans la population
    #on veut voir les differentes mutations de notre genotype de base. 
    #genotype = base_genotype 
    
    #genotype1 = base_genotype
    keys = pop.keys()
    environ = 0    
    
    for keys in zip(keys):
        environ = get_random_env()+1
        if environ == 1:
        #pop[genotype] -= 1
            valeur_phenotype_env =  20
        elif environ == 2: 
                valeur_phenotype_env = -10
        elif environ == 3: 
                    valeur_phenotype_env = -5              
        elif environ == 4: 
                    valeur_phenotype_env =  5
                 
    print("The environment chosed is:", environ )
    return valeur_phenotype_env
    
        
         
'''
            if   chr_a == "A" and chr_b == "T":
                valeur_phenotype += 30
            elif chr_a == "A" and  chr_b == "C":
                valeur_phenotype += 30
            elif chr_a == "A" and  chr_b == "G":
                valeur_phenotype -= 30
                
'''

print(pop)

def mutation_step():
    mutation_count = get_mutation_count()
    for i in range(mutation_count):
        mutation_event()
        
mutation_step()
print("mutation step")
print(pop)

#je veux ajouter la mutation a la liste!!!

#Genetic drift and fitness affect which haplotypes make it to the next generation
#Fitness weights the multinomial draw.



'''
def get_offspring_counts():
    haplotypes = list(pop.keys())
    frequencies = [pop[haplotype]/float(pop_size) for haplotype in haplotypes]
    fitnesses = [fitness[haplotype] for haplotype in haplotypes]
    weights = [x * y for x,y in zip(frequencies, fitnesses)]
    total = sum(weights)
    weights = [x / total for x in weights]
    return list(np.random.multinomial(pop_size, weights))
'''

def get_valeur_phenotype(genotype1, genotype2):
    valeur_phenotype = 0
    new_pop = {} #nb si je mets le crochet ca sera un list

    #assert len(genotype1) == len(genotype2)
    for chr_a, chr_b in zip(genotype1, genotype2):
        if chr_a != chr_b:
            if   chr_a == "A" and chr_b == "T":
                valeur_phenotype += 30
            elif chr_a == "A" and  chr_b == "C":
                valeur_phenotype += 30
            elif chr_a == "A" and  chr_b == "G":
                valeur_phenotype -= 30

                
                
            if  chr_a == "T" and chr_b == "A":
                valeur_phenotype += 10
            elif chr_a == "T" and  chr_b == "C":
                valeur_phenotype -= 5
            elif chr_a == "T" and  chr_b == "G":
                valeur_phenotype += 2


                
                
            if chr_a == "C" and chr_b == "T":
                valeur_phenotype += 30
            elif chr_a == "C" and  chr_b == "G":
                valeur_phenotype -= 10
            elif chr_a == "C" and  chr_b == "A":
                valeur_phenotype += 10





            if chr_a == "G" and chr_b == "T":
                valeur_phenotype += 30
            elif chr_a == "G" and  chr_b == "A":
                valeur_phenotype -= 5
            elif chr_a == "G" and  chr_b == "C":
                valeur_phenotype += 5


    new_pop.update({genotype2:valeur_phenotype + fitness})
    
    #print("new_pop")    
    print(new_pop)

   
    return valeur_phenotype + fitness




# ici on cherche a savoir le nobre de genotype on aura pour la generation suivante. 
# The frequency of type A at time t -1 will be exactly p(t -1)= WA p(t)/(WA p(t) - Wa (1 - p(t))),
def get_offspring_counts():
    genotypes = list(pop.keys())
    frequencies = [pop[genotype]/float(pop_size) for genotype in genotypes]
    #fitnesses = [fitness[genotype] for genotype in genotypes]
    weights = [x  for x in zip(frequencies)]
    total = sum(frequencies)
    weights = [x / total for x in frequencies]
    #changer ceci a binomial
    return list(np.random.multinomial(pop_size, weights))

print(get_offspring_counts())


# ici on dit si la valeur du offspring est zero enleve le genotype de la population
def offspring_step():
    genotypes = list(pop.keys())
    counts = get_offspring_counts()
    for (genotype, count) in zip(genotypes, counts):
        if (count > 0):
            pop[genotype] = count
        else:
            del pop[genotype]
            

print(pop)

def time_step():
    mutation_step()
    offspring_step()
    
generations = 1


"""
def simulate():
    for i in range(generations):
       
        time_step()
"""

def get_distance(genotype1, genotype2):
    diffs = 0
    length = len(genotype1)
    assert len(genotype1) == len(genotype2)
    for chr_a, chr_b in zip(genotype1, genotype2):
        if chr_a != chr_b:
            diffs += 1
    return diffs / float(length)

"""
def clasifyPhenotype(value,keys):
    class1 = []
    class2 = []
    class3 = []
    
    if value < fitness:
        class1.append(keys)
    elif value > value:
        class2.append(keys)
    elif value == value:
        class3.append(keys)
    
    return class1 , class2, class3 
"""        

def sequence_compare(seq_a, seq_b):
    
        seq_a= base_genotype
        len1= len(seq_a)
        len2= len(seq_b)
        mismatches = []

        for pos in range (0,min(len1,len2)) :
              if seq_a[pos] != seq_b[pos]: #ici on va seulement faire si seq_a = A et seq_b = T 
                  mismatches.append(1)
              else:
                  mismatches.append(0)
        

             
        print (seq_a)
        print (mismatches)
        print (seq_b)
        with open("C:\\Users\owner\Desktop\dataGenotype.txt", "w") as f: #ca peut etre w ou a 
        
            """
             for i in range(len(mismatches)):
            #for keys in clone_inner_genotype.keys():
                #f.write("\n" + str(sequence_compare(base_genotype,keys)))
                f.write(f'{mismatches[i]}\n')
                #f.close()
            """

        
history = []
 
def simulate():
    inner_genotype = []  #list
    
    t = ()
    clone_pop = dict(pop) 
    history.append(clone_pop) 
    for i in range(generations):
        print("generation" ,i )
        time_step()
        clone_pop = dict(pop)
        history.append(clone_pop)
        print(history[i])
        
        #clone_inner_genotype = dict(history)
        #inner_genotype.append(clone_inner_genotype)
        
        #print(inner_genotype[i])
        
        for inner_genotype in history:
            print("this is inner genotype")
            #inner_genotype.append(history)
            #print(len(inner_genotype))
            #inner_genotype.update(history)
            print(inner_genotype)
            
            clone_inner_genotype =  inner_genotype
            
            keys = clone_inner_genotype.keys()
            values = clone_inner_genotype.values()
            
            #clasifyPhenotype(values,keys)
            #clone_inner_genotype.update({'inner_genotype': get_valeur_phenotype("ATGCAAAAATGCAAT",inner_genotype)})
            
            print(clone_inner_genotype)
            
        for keys in clone_inner_genotype.keys():
            #print(keys)
            
            val_phenotype1= get_valeur_phenotype("ATGCAAAAATGCAATAATGC",keys) 
            #val_env = env_event("ATGCAAAAATGCAATAATGC",keys) 
            val_env = env_event(keys)
            val_env_phenotype = val_phenotype1 + val_env
            
            
            #get_valeur_phenotypekeys) #avec ca j ai deja les valeurs keys et leurs genotype
            #get_distance("",keys)
            #t = (keys,  get_valeur_phenotype("",keys), get_distancekeys))
            
            get_valeur_phenotype("ATGCAAAAATGCAATAATGC",keys) #avec ca j ai deja les valeurs keys et leurs genotype
            get_distance("ATGCAAAAATGCAATAATGC",keys)           
            #t = (keys,  get_valeur_phenotype("ATGCAAAAATGCAATAATGC",keys), get_distance("ATGCAAAAATGCAATAATGC",keys))
            t = (keys,  get_valeur_phenotype("ATGCAAAAATGCAATAATGC",keys), get_distance("ATGCAAAAATGCAATAATGC",keys),val_env,val_env_phenotype)     
            
            
            #t = (keys,  get_valeur_phenotype("ATGCAAAAATGCAATAATGC",keys))
            print(t)
            #ici j'ai envie de creer une liste avec les champs: genotype, valeur get_distance et valeur get_val_pheno
            
            
            z= sequence_compare(base_genotype,keys)
            '''
            for keys in clone_inner_genotype.keys():
                with open("C:\\Users\owner\Desktop\dataGenotype.txt", 'w') as outputfile: 
                    outputfile.write(str(sequence_compare(base_genotype,keys)))
                    outputfile.close()

            '''
 
  
 

        with open("C:\\Users\owner\Desktop\dataGenotype.txt", 'w') as f:
            for keys in clone_inner_genotype.keys():
                f.write(f'{keys}\n')

                    
            '''
            distmatrix = get_valeur_phenotype("ATGCAAAAATGCAAT",keys)
            constructor = DistanceTreeConstructor()
            UPGMATree = constructor.upgma(distmatrix)
            Phylo.draw(UPGMATree)

            # Printing the phlyogenetic tree using terminal
            Phylo.draw_ascii(UPGMATree)
            
            '''
            
            
            #print(clone_inner_genotype)
    return t  #fait attention c'est ceci qui retourne toute les generations si tu recule avec ca renvoie juste une seule generation
            
            #print(len(inner_genotype))
            #inner_genotype.append({inner_genotype[i]:get_valeur_phenotype("ATGCAAAAATGCAAT",inner_genotype[i])})
            #inner_genotype.update({inner_genotype[i]:get_valeur_phenotype("ATGCAAAAATGCAAT",inner_genotype[i])})
            #history[i].update({history[i]:get_valeur_phenotype("ATGCAAAAATGCAAT",history[i])})      
            


# Output:
# {'a': 1, 'b': 3, 'c': 4}



            
            
        # maintenant il reste juste a ecrire une autre fonction qui me permet de calculer la difference entre les 
        # elements de la liste inner_genotype avec mon genotype de depart et appres calculer une fitness.
        
        # voila ou j'ai des erreurs

"""        
    for i in range(len(clone_pop)):
            
        for j in range(len(clone_pop)):
                    print(history[i][i])
                    #print(get_valeur_phenotype("ATGCAAAAATGCAAT","history[i][i]"))
"""

    
            
        

                 
simulate() #ceci etait au debut de la ligne mais pour lappeler il faut que ca soit apres les : 






#print(get_distance("ATGCAAAAATGCAATAATGC","CTGGAAAAATGCAATATAGC"))
#print(get_distance("ATGCAAAAATGCAATAATGC","AAGCAAAAATGCAATAATGC"))
#print(get_distance("ATGCAAAAATGCAATAATGC","AAGCAAAAATGCAATATGAC"))
#print(get_distance("ATGCAAAAATGCAATAATGC","CTGCAAAAATGCAATAATGC"))
#print(get_distance("ATGCAAAAATGCAATAATGC","ATTCAAAAATGCAATATGCA"))

#print(get_valeur_phenotype("ATGCAAAAATGCAATATGC","CTGGAAAAATGCAATATGC"))







